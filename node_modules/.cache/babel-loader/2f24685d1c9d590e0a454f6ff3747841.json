{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkurshner/code/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/StatusBar.js\";\nimport React from \"react\";\n\nconst StatusBar = ({\n  session,\n  timerState\n}) => {\n  const getPercentComplete = () => (timerState.focusDuration * 60 - session.timeRemaining) / timerState.focusDuration;\n\n  const addPercentageSymbol = percentage => `${percentage}%`;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, getPercentComplete), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"50%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default StatusBar;","map":{"version":3,"sources":["/Users/stephenkurshner/code/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/StatusBar.js"],"names":["React","StatusBar","session","timerState","getPercentComplete","focusDuration","timeRemaining","addPercentageSymbol","percentage","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAC7C,QAAMC,kBAAkB,GAAG,MACzB,CAACD,UAAU,CAACE,aAAX,GAA2B,EAA3B,GAAgCH,OAAO,CAACI,aAAzC,IACAH,UAAU,CAACE,aAFb;;AAGA,QAAME,mBAAmB,GAAGC,UAAU,IAAK,GAAEA,UAAW,GAAxD;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,kBAAJ,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANT,CAM2B;AAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAiBD,CAvBD;;AAyBA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\n\nconst StatusBar = ({ session, timerState }) => {\n  const getPercentComplete = () =>\n    (timerState.focusDuration * 60 - session.timeRemaining) /\n    timerState.focusDuration;\n  const addPercentageSymbol = percentage => `${percentage}%`;\n\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <p>{getPercentComplete}</p>\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: \"50%\" }} // TODO: Increase width % as elapsed time increases\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusBar;\n"]},"metadata":{},"sourceType":"module"}