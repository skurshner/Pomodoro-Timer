{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkurshner/code/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/StatusBar.js\";\nimport React from \"react\";\n\nconst StatusBar = ({\n  timerState,\n  session\n}) => {\n  const focDuration = timerState.focusDuration * 60;\n  const brkDuration = timerState.breakDuration * 60;\n\n  const getPercentageLeft = () => {\n    if (session.label === \"Focusing\") {\n      return 100 * ((focDuration - session.timeRemaining) / focDuration);\n    } else if (session.label === \"On Break\") {\n      return 100 * ((brkDuration - session.timeRemaining) / brkDuration);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, getPercentageLeft()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": getPercentageLeft() // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: getPercentageLeft() + \"%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default StatusBar;","map":{"version":3,"sources":["/Users/stephenkurshner/code/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/StatusBar.js"],"names":["React","StatusBar","timerState","session","focDuration","focusDuration","brkDuration","breakDuration","getPercentageLeft","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAC7C,QAAMC,WAAW,GAAGF,UAAU,CAACG,aAAX,GAA2B,EAA/C;AACA,QAAMC,WAAW,GAAGJ,UAAU,CAACK,aAAX,GAA2B,EAA/C;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIL,OAAO,CAACM,KAAR,KAAkB,UAAtB,EAAkC;AAChC,aAAO,OAAO,CAACL,WAAW,GAAGD,OAAO,CAACO,aAAvB,IAAwCN,WAA/C,CAAP;AACD,KAFD,MAEO,IAAID,OAAO,CAACM,KAAR,KAAkB,UAAtB,EAAkC;AACvC,aAAO,OAAO,CAACH,WAAW,GAAGH,OAAO,CAACO,aAAvB,IAAwCJ,WAA/C,CAAP;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,iBAAiB,EAArB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeH,iBAAiB,EALlC,CAKsC;AALtC;AAME,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEJ,iBAAiB,KAAK;AAA/B,KANT,CAM+C;AAN/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAiBD,CA7BD;;AA+BA,eAAeP,SAAf","sourcesContent":["import React from \"react\";\n\nconst StatusBar = ({ timerState, session }) => {\n  const focDuration = timerState.focusDuration * 60;\n  const brkDuration = timerState.breakDuration * 60;\n\n  const getPercentageLeft = () => {\n    if (session.label === \"Focusing\") {\n      return 100 * ((focDuration - session.timeRemaining) / focDuration);\n    } else if (session.label === \"On Break\") {\n      return 100 * ((brkDuration - session.timeRemaining) / brkDuration);\n    }\n  };\n\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <p>{getPercentageLeft()}</p>\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow={getPercentageLeft()} // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: getPercentageLeft() + \"%\" }} // TODO: Increase width % as elapsed time increases\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusBar;\n"]},"metadata":{},"sourceType":"module"}